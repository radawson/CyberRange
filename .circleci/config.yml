version: 2.1
orbs:
  slack: circleci/slack@3.4.2

references:

base_image: &base_image
  awscyberrange/commandcenter:latest

working_directory: &working_directory
  /opt/AWSCyberRange

gitclone_dir: &gitclone_dir
  /opt/AWSCyberRange

default_config: &default_config
  docker:
    - image: *base_image
  working_directory: *working_directory
  environment:
    BASH_ENV: /root/.bashrc
    CIRCLE_COMPARE_URL: << pipeline.project.git_url >>/compare/<< pipeline.git.base_revision >>..<<pipeline.git.revision>>

repo_cache_key: &repo_cache_key
  v1-repo-{{ .Branch }}-{{ .Revision }}

# Step to restore repository from cache
restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
      - *working_directory

set_terraform_environment: &set_terraform_environment
  run:
    name: set terraform environment
    command: |
      cd && touch $BASH_ENV
      if [ "${CIRCLE_BRANCH}" == "master" ]; then
        echo 'export TERRAFORM_ENVIRONMENT=eu-west-2' >> $BASH_ENV
      else
        echo 'export TERRAFORM_ENVIRONMENT=us-east-1' >> $BASH_ENV
      fi

terraform_init: &terraform_init
  run:
    name: terraform init
    command: |
      source $BASH_ENV
      ENV=circleci REGION=eu-west-2 make init

apply_job: &apply_job
  <<: *default_config
  steps:
    - slack/notify:
              channel: cicd
              color: '#42e2f4'
              message: A $CIRCLE_JOB job has started the for the Cyber Range\n\n Compare URL -> $CIRCLE_COMPARE_URL
              webhook: '${SLACK_WEBHOOK}'
    - *restore_repo
    - *set_terraform_environment
    - *terraform_init
    - attach_workspace:
        at: *working_directory
    - run:
        name: terraform apply test
        command: |
          source $BASH_ENV
          cd /opt/AWSCyberRange/terraform/keys
          echo '-----BEGIN RSA PRIVATE KEY-----' > circleci_terraform
          echo $AWS_SSH_KEY | sed -e 's/\s\+/\n/g' >> circleci_terraform
          echo '-----END RSA PRIVATE KEY-----' >> circleci_terraform
          chmod 700 circleci_terraform
          cd /opt/AWSCyberRange
          make
    - run:
        name: Delete Terraform Assets
        command: |
          cd /opt/AWSCyberRange
          make destroy-force
        when: always
    - slack/notify:
            message: "CICD Pipeline build has completed the final pipeline test, review the results" # Optional: Enter your own message
            mentions: "cappetta" # Optional: Enter the Slack IDs of any user or group (sub_team) to be mentioned
            color: "#42e2f4" # Optional: Assign custom colors for each notification

jobs:

  build:
    <<: *default_config
    steps:
      - slack/notify:
                channel: cicd
                color: '#42e2f4'
                message: A $CIRCLE_JOB job has started the for the Cyber Range\n\n Compare URL -> $CIRCLE_COMPARE_URL
                webhook: '${SLACK_WEBHOOK}'
      - checkout
      - *set_terraform_environment
      - run:
          name: terraform init
          command: terraform init -input=false
      - run:
          name: Check if Terraform configurations are properly formatted
          command: if [[ -n "$(terraform fmt -write=false)" ]]; then echo "Some terraform files need be formatted, running 'terraform fmt' to fix"; terraform fmt; fi
      - run:
          name: Install tflint
          command: curl -L -o /tmp/tflint.zip https://github.com/wata727/tflint/releases/download/v0.4.2/tflint_linux_amd64.zip && unzip /tmp/tflint.zip -d /usr/local/bin
      - run:
          name: Check Terraform configurations with tflint
          command: tflint
      - run:
          name: terraform format (fmt) check # 2
          command: |
            source $BASH_ENV
            cd /opt/AWSCyberRange/terraform/environments/$TERRAFORM_ENVIRONMENT
            if [ $(terraform fmt | grep -v .terraform | tee fmt_result.txt | wc -l) -gt 1 ]; then
              echo "Format of this terraform files is not appropiate:"
              echo
              cat fmt_result.txt
              rm fmt_result.txt
              git checkout -- .
              echo
              echo "Please run terraform fmt"

              exit 1
            fi
      - *save_repo

  plan:
    <<: *default_config
    steps:
      - slack/notify:
                channel: cicd
                color: '#42e2f4'
                message: A $CIRCLE_JOB job has started the for the Cyber Range\n\n Compare URL -> $CIRCLE_COMPARE_URL
                webhook: '${SLACK_WEBHOOK}'
      - *restore_repo
      - *set_terraform_environment
      - *terraform_init
      - run:
          name: terraform plan
          command: |
            source $BASH_ENV
            cd /opt/AWSCyberRange/terraform/keys
            echo '-----BEGIN RSA PRIVATE KEY-----' > circleci_terraform
            echo $AWS_SSH_KEY | sed -e 's/\s\+/\n/g' >> circleci_terraform
            echo '-----END RSA PRIVATE KEY-----' >> circleci_terraform
            chmod 700 circleci_terraform
            cd /opt/AWSCyberRange
            ENV=circleci REGION=eu-west-2 make plan
      - persist_to_workspace:
          root: *working_directory
          paths:
            - ./terraform/terraform.plan
  apply:
    <<: *apply_job

  apply-with-approval:
    <<: *apply_job

workflows:
  version: 2
  development_build:
    jobs:
      - build
      - plan:
          requires:
            - build
      - apply:
          requires:
            - plan
          filters:
            branches:
              only: master
